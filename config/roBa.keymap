#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define JP_ZKHK  GRAVE        // Zenkaku ↔ Hankaku ↔ Kanji (半角 ↔ 全角 ↔ 漢字)
#define JP_MINUS MINUS        // -
#define JP_CARET EQUAL        // ^
#define JP_YEN   INT3         // ¥
#define JP_AT    LBKT         // @
#define JP_LBKT  RBKT         // [
#define JP_EISU  CAPS         // Eisū (英数)
#define JP_SEMI  SEMI         // ;
#define JP_COLON SQT          // :
#define JP_RBKT  NUHS         // ]
#define JP_COMMA COMMA        // ,
#define JP_DOT   DOT          // .
#define JP_SLASH SLASH        // /
#define JP_BSLH  INT1         // (backslash)
#define JP_MHEN  INT5         // Muhenkan (無変換)
#define JP_HENK  INT4         // Henkan (変換)
#define JP_KANA  INT2         // Katakana ↔ Hiragana ↔ Rōmaji (カタカナ ↔ ひらがな ↔ ローマ字)
#define JP_EXCL  LS(N1)       // !
#define JP_DQT   LS(N2)       // "
#define JP_HASH  LS(N3)       // #
#define JP_DLLR  LS(N4)       // $
#define JP_PRCNT LS(N5)       // %
#define JP_AMPS  LS(N6)       // &
#define JP_SQT   LS(N7)       // '
#define JP_LPAR  LS(N8)       // (
#define JP_RPAR  LS(N9)       // )
#define JP_EQUAL LS(JP_MINUS) // =
#define JP_TILDE LS(JP_CARET) // ~
#define JP_PIPE  LS(JP_YEN)   // |
#define JP_GRAVE LS(JP_AT)    // `
#define JP_LBRC  LS(JP_LBKT)  // {
#define JP_CAPS  LS(JP_EISU)  // Caps Lock
#define JP_PLUS  LS(JP_SEMI)  // +
#define JP_ASTRK LS(JP_COLON) // *
#define JP_RBRC  LS(JP_RBKT)  // }
#define JP_LT    LS(JP_COMMA) // <
#define JP_RT    LS(JP_DOT)   // >
#define JP_QMARK LS(JP_SLASH) // ?
#define JP_UNDER LS(JP_BSLH)  // _

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };

        shift_tab {
            bindings = <&mkp MB1>;
            key-positions = <7 8>;
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                    &kp W         &kp E             &kp R                      &kp T                                        &kp Y                      &kp U    &kp I      &kp O    &kp P
&mt LEFT_SHIFT A         &mt LCTRL S   &kp D             &kp F                      &kp G        &none          &none            &kp H                      &lt 5 J  &kp K      &kp L    &mt RCTRL ENTER
&lt 3 Z                  &kp X         &kp C             &kp V                      &kp B        &none          &none            &kp N                      &kp M    &kp COMMA  &kp DOT  &kp MINUS
&kp LANG_ZENKAKUHANKAKU  &mt LCTRL F7  &mt LEFT_ALT F10  &lt 1 LANG_ZENKAKUHANKAKU  &lt 5 SPACE  &lt 2 TAB      &mt RCTRL ENTER  &mt RIGHT_SHIFT BACKSPACE                               &kp RIGHT_WIN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>, <&inc_dec_kp 0 0>;
        };

        FUNCTION {
            bindings = <
&kp LS(N5)  &kp LS(N4)  &kp LS(N6)  &kp LS(NON_US_BSLH)  &kp SLASH                              &kp INT3  &kp F2  &kp F3  &kp F4  &kp F5
&trans      &trans      &trans      &trans               &kp LS(KP_MINUS)  &trans      &kp F13  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10
&trans      &trans      &trans      &trans               &trans            &trans      &trans   &trans    &trans  &trans  &trans  &kp F11
&trans      &trans      &trans      &trans               &trans            &trans      &trans   &trans                            &kp F12
            >;
        };

        NUM {
            bindings = <
&none  &none  &none  &none  &none                     &kp KP_SLASH   &kp N7        &kp N8        &kp N9        &kp INT_KPJPCOMMA
&none  &none  &none  &none  &none  &none      &none   &kp COLON      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0
&none  &none  &none  &none  &none  &none      &trans  &kp SEMICOLON  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT
&none  &none  &none  &none  &none  &none      &none   &none                                                    &none
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&kp RC(W)       &kp LG(LEFT_ARROW)  &kp RG(UP_ARROW)  &kp LG(RIGHT_ARROW)  &trans                             &kp PAGE_UP         &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_DOWN
&kp LEFT_SHIFT  &kp LCTRL           &kp LEFT_ALT      &kp TAB              &trans  &trans      &kp LS(LG(S))  &kp LA(LEFT_ARROW)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(RIGHT_ARROW)
&kp LC(T)       &kp LC(X)           &kp LC(C)         &kp LC(V)            &trans  &trans      &kp LG(V)      &kp LC(PAGE_UP)     &kp F2          &kp TAB         &kp LEFT_ALT     &kp LC(PAGE_DOWN)
&trans          &trans              &trans            &trans               &trans  &trans      &kp RG(V)      &kp DELETE                                                           &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
